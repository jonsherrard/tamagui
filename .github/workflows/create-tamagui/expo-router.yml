name: Test Tamagui Expo Router Setup

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-setup:
    name: Test create-tamagui expo-router
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install global dependencies
        run: |
          npm install -g npm@latest
          npm install -g yarn
          npm install -g expo-cli

      - name: Create Tamagui project
        run: npx create-tamagui@latest --template expo-router my-tamagui-app

      - name: Install project dependencies
        working-directory: ./my-tamagui-app
        run: yarn install --immutable

      - name: Start Expo project and wait for Metro bundler
        working-directory: ./my-tamagui-app
        run: |
          yarn start > startup.log 2>&1 &
          PID=$!

          # Function to check if Metro bundler is ready
          metro_ready() {
            grep -q "Metro waiting on exp://" startup.log
          }

          # Function to check if yarn start failed
          yarn_failed() {
            grep -qiE "error|exception" startup.log
          }

          # Wait for Metro bundler or failure
          TIMEOUT=30  # 30 seconds timeout
          COUNTER=0
          while [ $COUNTER -lt $TIMEOUT ]; do
            if metro_ready; then
              echo "Metro bundler is ready!"
              kill $PID
              exit 0
            fi
            if yarn_failed; then
              echo "yarn start failed!"
              kill $PID
              exit 1
            fi
            sleep 1
            COUNTER=$((COUNTER + 1))
          done

          echo "Timed out waiting for Metro bundler"
          kill $PID
          exit 1

      - name: Check startup log
        if: always()
        working-directory: ./my-tamagui-app
        run: |
          echo "Startup log contents:"
          cat startup.log
